#dat = data.frame(NULL)
}
coolStuff = c("Shades", "Story", "Beans")
paste("Cool", coolStuff)
paste("Cool", coolStuff, sep="! ") # can change sep argument to whatever
paste("Cool", coolStuff, sep="... ") # can change sep argument to whatever
paste("Cool", coolStuff, sep="er ") # can change sep argument to whatever
paste("Sub", 1:27, sep="")
paste("Sub", 1:27, ".txt", sep="")
for (i in 1:27) {
fileName = paste("Sub", i, ".txt", sep="")
print(fileName)
}
dat = data.frame(NULL) # make empty container
for (i in 1:27) {
fileName = paste("Sub", i, ".txt", sep="") # make filename
temp = read.delim(file=fileName) # read data with filename
temp$ID = i # mark data with subject number
dat = rbind(dat, temp) # staple it to previous
}
setwd("C:/Users/bartholowlab/Desktop/For Joe/For Joe")
dat = data.frame(NULL) # make empty container
for (i in 1:27) {
fileName = paste("Sub", i, ".txt", sep="") # make filename
temp = read.delim(file=fileName) # read data with filename
temp$ID = i # mark data with subject number
dat = rbind(dat, temp) # staple it to previous
}
View(dat)
merged=dat
merged$Subnum = merged$ID
forehead_range = c(1:8)
eyes_range = c(9:16)
nose_range = c(17:24)
split1 = str_split_fixed(merged$FaceFilename, "_", 2)[,1]
require(stringr)
?substr
strsplit(merged$FaceFilename, "_")
merged$FaceFilename
merged$FaceFilename = as.character(merged$FaceFilename)
strsplit(merged$FaceFilename, "_")
split1 = str_split_fixed(merged$FaceFilename, "_", 2)[,1]
split1
row.names(mtcars)
grep("Merc", mtcars)
grep(mtcars, "Merc", value=T)
?grep
grep("Merc", row.names(mtcars), value=T)
grep("Merc", row.names(mtcars))
grep("Merc", row.names(mtcars), value=T)
dat$race = NULL
dat$race[grep("Black", dat$FaceFilename)] = "Black"
View(dat)
View(dat)
apropos('substr')
?substring
forehead_range = c(1:8)
eyes_range = c(9:16)
nose_range = c(17:24)
dat$fixation = NA # empty container
for (i in forehead_range) {
dat$fixation[grep(i, dat$FaceFilename)] = "forehead"
}
View(dat)
for (i in eyes_range) {
dat$fixation[grep(i, dat$FaceFilename)] = "eyes"
}
for (i in nose_range) {
dat$fixation[grep(i, dat$FaceFilename)] = "nose"
}
View(dat)
sub2dat = dat[dat$ID == 2,]
table(sub2dat$fixation)
table(sub2dat$fixation, sub2dat$Block)
#install.packages("xlsx")
library(xlsx)
dataSheets = c("Debrief", "digits", "Distraction_Assignment", "Note_sheet",
"Post-Questionnaire", "Writing_Task_Evaluation")
dat = data.frame(NULL)
for (i in 1:length(dataSheets)) {
RAs = substr(list.files(pattern=dataSheets[i]), nchar(dataSheets[i])+2, nchar(dataSheets[i])+3)
for (j in 1:length(RAs)) {
fileName = paste(dataSheets[i], "_", RAs[j], ".xlsx", sep="")
temp = read.xlsx(fileName, 1)
print(fileName); print(names(temp))
#dat = rbind(dat, temp)
# Save to an object with variable name
# I'm going to use eval(parse()) and you don't get to pretend you're better than me
}
#fuckerList = list(fuckerList, dat)
#dat = data.frame(NULL)
}
?rbind
dataSheets = c("Debrief", "digits", "Distraction_Assignment", "Note_sheet",
"Post-Questionnaire", "Writing_Task_Evaluation")
x = dataSheets[[2]]
x
dataSheets[[2]]
df <- data.frame(A = 1:10, B = 11:20)
test.function <- function(x)
{
z <- df[[x]]
return(z)
}
test.function("A")
outList = list(dataSheets)
outList
?list
outList = vector("list", length=length(dataSheets))
outList
#install.packages("xlsx")
library(xlsx)
dataSheets = c("Debrief", "digits", "Distraction_Assignment", "Note_sheet",
"Post-Questionnaire", "Writing_Task_Evaluation")
outList = vector("list", length=length(dataSheets))
dat = data.frame(NULL)
for (i in 1:length(dataSheets)) {
RAs = substr(list.files(pattern=dataSheets[i]), nchar(dataSheets[i])+2, nchar(dataSheets[i])+3)
for (j in 1:length(RAs)) {
fileName = paste(dataSheets[i], "_", RAs[j], ".xlsx", sep="")
temp = read.xlsx(fileName, 1)
print(fileName); print(names(temp))
dat = rbind(dat, temp)
# Save to an object with variable name
# I'm going to use eval(parse()) and you don't get to pretend you're better than me
}
outList[[i]] = dat
dat = data.frame(NULL)
}
#install.packages("xlsx")
library(xlsx)
dataSheets = c("Debrief", "digits", "Distraction_Assignment", "Note_sheet",
"Post-Questionnaire", "Writing_Task_Evaluation")
outList = vector("list", length=length(dataSheets))
dat = data.frame(NULL)
for (i in 1:length(dataSheets)) {
RAs = substr(list.files(pattern=dataSheets[i]), nchar(dataSheets[i])+2, nchar(dataSheets[i])+3)
for (j in 1:length(RAs)) {
fileName = paste(dataSheets[i], "_", RAs[j], ".xlsx", sep="")
temp = read.xlsx(fileName, 1)
print(fileName); print(names(temp))
dat = rbind(dat, temp)
# Save to an object with variable name
# I'm going to use eval(parse()) and you don't get to pretend you're better than me
}
outList[[i]] = dat
dat = data.frame(NULL)
}
#install.packages("xlsx")
library(xlsx)
dataSheets = c("Debrief", "digits", "Distraction_Assignment", "Note_sheet",
"Post-Questionnaire", "Writing_Task_Evaluation")
outList = vector("list", length=length(dataSheets))
dat = data.frame(NULL)
for (i in 1:length(dataSheets)) {
RAs = substr(list.files(pattern=dataSheets[i]), nchar(dataSheets[i])+2, nchar(dataSheets[i])+3)
for (j in 1:length(RAs)) {
fileName = paste(dataSheets[i], "_", RAs[j], ".xlsx", sep="")
temp = read.xlsx(fileName, 1)
print(fileName); print(names(temp))
dat = rbind(dat, temp)
# Save to an object with variable name
# I'm going to use eval(parse()) and you don't get to pretend you're better than me
}
outList[[i]] = dat
dat = data.frame(NULL)
}
#install.packages("xlsx")
library(xlsx)
dataSheets = c("Debrief", "digits", "Distraction_Assignment", "Note_sheet",
"Post-Questionnaire", "Writing_Task_Evaluation")
outList = vector("list", length=length(dataSheets))
dat = data.frame(NULL)
for (i in 1:length(dataSheets)) {
RAs = substr(list.files(pattern=dataSheets[i]), nchar(dataSheets[i])+2, nchar(dataSheets[i])+3)
for (j in 1:length(RAs)) {
fileName = paste(dataSheets[i], "_", RAs[j], ".xlsx", sep="")
temp = read.xlsx(fileName, 1)
print(fileName); print(names(temp))
dat = rbind(dat, temp)
# Save to an object with variable name
# I'm going to use eval(parse()) and you don't get to pretend you're better than me
}
outList[[i]] = dat
dat = data.frame(NULL)
}
#install.packages("xlsx")
library(xlsx)
dataSheets = c("Debrief", "digits", "Distraction_Assignment", "Note_sheet",
"Post-Questionnaire", "Writing_Task_Evaluation")
outList = vector("list", length=length(dataSheets))
dat = data.frame(NULL)
for (i in 1:length(dataSheets)) {
RAs = substr(list.files(pattern=dataSheets[i]), nchar(dataSheets[i])+2, nchar(dataSheets[i])+3)
for (j in 1:length(RAs)) {
fileName = paste(dataSheets[i], "_", RAs[j], ".xlsx", sep="")
temp = read.xlsx(fileName, 1)
print(fileName); print(names(temp))
dat = rbind(dat, temp)
# Save to an object with variable name
# I'm going to use eval(parse()) and you don't get to pretend you're better than me
}
outList[[i]] = dat
dat = data.frame(NULL)
}
#install.packages("xlsx")
library(xlsx)
dataSheets = c("Debrief", "digits", "Distraction_Assignment", "Note_sheet",
"Post-Questionnaire", "Writing_Task_Evaluation")
outList = vector("list", length=length(dataSheets))
dat = data.frame(NULL)
for (i in 1:length(dataSheets)) {
RAs = substr(list.files(pattern=dataSheets[i]), nchar(dataSheets[i])+2, nchar(dataSheets[i])+3)
for (j in 1:length(RAs)) {
fileName = paste(dataSheets[i], "_", RAs[j], ".xlsx", sep="", stringsAsFactors=F)
temp = read.xlsx(fileName, 1)
print(fileName); print(names(temp))
dat = rbind(dat, temp)
# Save to an object with variable name
# I'm going to use eval(parse()) and you don't get to pretend you're better than me
}
outList[[i]] = dat
dat = data.frame(NULL)
}
#install.packages("xlsx")
library(xlsx)
dataSheets = c("Debrief", "digits", "Distraction_Assignment", "Note_sheet",
"Post-Questionnaire", "Writing_Task_Evaluation")
outList = vector("list", length=length(dataSheets))
dat = data.frame(NULL)
for (i in 1:length(dataSheets)) {
RAs = substr(list.files(pattern=dataSheets[i]), nchar(dataSheets[i])+2, nchar(dataSheets[i])+3)
for (j in 1:length(RAs)) {
fileName = paste(dataSheets[i], "_", RAs[j], ".xlsx", sep="")
temp = read.xlsx(fileName, 1, stringsAsFactors=F)
print(fileName); print(names(temp))
dat = rbind(dat, temp)
# Save to an object with variable name
# I'm going to use eval(parse()) and you don't get to pretend you're better than me
}
outList[[i]] = dat
dat = data.frame(NULL)
}
#install.packages("xlsx")
library(xlsx)
dataSheets = c("Debrief", "digits", "Distraction_Assignment", "Note_sheet",
"Post-Questionnaire", "Writing_Task_Evaluation")
outList = vector("list", length=length(dataSheets))
dat = data.frame(NULL)
for (i in 1:length(dataSheets)) {
RAs = substr(list.files(pattern=dataSheets[i]), nchar(dataSheets[i])+2, nchar(dataSheets[i])+3)
for (j in 1:length(RAs)) {
fileName = paste(dataSheets[i], "_", RAs[j], ".xlsx", sep="")
temp = read.xlsx(fileName, 1, stringsAsFactors=F)
print(fileName); print(names(temp))
dat = rbind(dat, temp)
# Save to an object with variable name
# I'm going to use eval(parse()) and you don't get to pretend you're better than me
}
outList[[i]] = dat
dat = data.frame(NULL)
}
#install.packages("xlsx")
library(xlsx)
dataSheets = c("Debrief", "digits", "Distraction_Assignment", "Note_sheet",
"Post-Questionnaire", "Writing_Task_Evaluation")
outList = vector("list", length=length(dataSheets))
dat = data.frame(NULL)
for (i in 1:length(dataSheets)) {
RAs = substr(list.files(pattern=dataSheets[i]), nchar(dataSheets[i])+2, nchar(dataSheets[i])+3)
for (j in 1:length(RAs)) {
fileName = paste(dataSheets[i], "_", RAs[j], ".xlsx", sep="")
temp = read.xlsx(fileName, 1, stringsAsFactors=F)
print(fileName); print(names(temp))
dat = rbind(dat, temp)
# Save to an object with variable name
# I'm going to use eval(parse()) and you don't get to pretend you're better than me
}
outList[[i]] = dat
dat = data.frame(NULL)
}
names(outList)
ls(outList)
?list
head(outList[[1]])
table(outList[[1]]$Subject)
?subset
subset(table(outList[[1]]$Subject, table(outList[[1]]$Subject>1)
)
subset(table(outList[[1]]$Subject), table(outList[[1]]$Subject)>1)
for (i in length(dataSheets)) {
print(i)
print(subset(table(outList[[i]]$Subject), table(outList[[i]]$Subject)>1))
}
for (i in 1:length(dataSheets)) {
print(i)
print(subset(table(outList[[i]]$Subject), table(outList[[i]]$Subject)>1))
}
names(outList[[2]])
names(outList[[2]])[1] = "Subject"
# checking for duplicates
for (i in 1:length(dataSheets)) {
print(i)
print(subset(table(outList[[i]]$Subject), table(outList[[i]]$Subject)>1))
}
names(outList)
head(outList[[1]])
names(outList) == dataSheets
names(outList) = dataSheets
names(outList)
head(outList[[1]])
for (i in 1:length(dataSheets)) {
print(names(outList[[1]]))
print(subset(table(outList[[i]]$Subject), table(outList[[i]]$Subject)>1))
}
for (i in 1:length(dataSheets)) {
print(names(outList)[i])
print(subset(table(outList[[i]]$Subject), table(outList[[i]]$Subject)>1))
}
dat1 = outList[[1]]
dat1[dat1$Subject == 168,]
dat3 = outList[[3]]
dat3[dat3$Subject %in% c(168, 170, 203, 224, 225, 33),]
complete.cases(outList[[3]])
outList[[1]] = outList[[1]][!(outList[[1]]$Subject %in% c("165 or 166?", "168")]
outList[[1]] = outList[[1]][!(outList[[1]]$Subject %in% c("165 or 166?", "168"),]
outList[[3]] = outList[[3]][complete.cases(outList[[3]]),]
!(outList[[1]]$Subject %in% c("165 or 166?", "168")
dim(outList[[1]])
outList[[1]] = outList[[1]][!(outList[[1]]$Subject %in% c("165 or 166?", "168")),]
dim(outList[[1]])
dataSheets
for (i in 1:length(dataSheets)) {
print(names(outList)[i])
print(subset(table(outList[[i]]$Subject), table(outList[[i]]$Subject)>1))
}
distract[(distract$Subject %in% c(168, 170, 203, 224, 225, 33)),]
distract = outList[[3]]
distract[(distract$Subject %in% c(168, 170, 203, 224, 225, 33)),]
notes[notes$Subject == 150,]
notes = outList[[4]]
notes[notes$Subject == 150,]
notes[95,]
notes[265,]
postQ = outList[[5]]
head(postQ)
library(xlsx)
dataSheets = c("Debrief", "digits", "Distraction_Assignment", "Note_sheet",
"Post-Questionnaire", "Writing_Task_Evaluation")
outList = vector("list", length=length(dataSheets))
dat = data.frame(NULL)
for (i in 1:length(dataSheets)) {
RAs = substr(list.files(pattern=dataSheets[i]), nchar(dataSheets[i])+2, nchar(dataSheets[i])+3)
for (j in 1:length(RAs)) {
fileName = paste(dataSheets[i], "_", RAs[j], ".xlsx", sep="")
temp = read.xlsx(fileName, 1, stringsAsFactors=F)
print(fileName); print(names(temp))
dat = rbind(dat, temp)
# Save to an object with variable name
# I'm going to use eval(parse()) and you don't get to pretend you're better than me
}
outList[[i]] = dat
dat = data.frame(NULL)
}
# fix subno name
names(outList[[2]])[1] = "Subject"
# checking for duplicates
# Note that it is right that "digits" has frequent duplicates!
for (i in 1:length(dataSheets)) {
print(names(outList)[i])
print(subset(table(outList[[i]]$Subject), table(outList[[i]]$Subject)>1))
}
debrief = outList[[1]]
debrief[debrief$Subject == 168,] # bad
debrief = debrief[!(debrief$Subject %in% c("165 or 166?", "168")),]
distract = outList[[3]]
distract = distract[!(distract$Subject %in% c(168, 170, 203, 33)),]
distract = distract[complete.cases(distract),]
notes = outList[[4]]
notes[notes$Subject == 150,]
notes = notes[-265,] # deleting duplicate row
postQ = outList[[5]]
names(outList) = dataSheets
for (i in 1:length(dataSheets)) {
print(names(outList)[i])
print(subset(table(outList[[i]]$Subject), table(outList[[i]]$Subject)>1))
}
postQ[postQ$Subject %in% c(140, 63, 82)]
postQ[postQ$Subject %in% c(140, 63, 82),]
eval = outList[[6]]
eval[eval$Subject %in% c(140, 63, 82),]
digits = outList[[2]]
digits
names(digits)
digits = digits[complete.cases(digits[,1:9])
digits = digits[complete.cases(digits[,1:9]),]
digits
dat = data.frame("Subject" = 1:450)
dat = data.frame(NULL)
names(dat) = c(names(notes), names(distract), names(postQ),
names(distract), names(digits), names(debrief), names(eval))
library(xlsx)
dataSheets = c("Debrief", "digits", "Distraction_Assignment", "Note_sheet",
"Post-Questionnaire", "Writing_Task_Evaluation")
outList = vector("list", length=length(dataSheets))
names(outList) = dataSheets
dat = data.frame(NULL)
for (i in 1:length(dataSheets)) {
RAs = substr(list.files(pattern=dataSheets[i]), nchar(dataSheets[i])+2, nchar(dataSheets[i])+3)
for (j in 1:length(RAs)) {
fileName = paste(dataSheets[i], "_", RAs[j], ".xlsx", sep="")
temp = read.xlsx(fileName, 1, stringsAsFactors=F)
print(fileName); print(names(temp))
dat = rbind(dat, temp)
# Save to an object with variable name
# I'm going to use eval(parse()) and you don't get to pretend you're better than me
}
outList[[i]] = dat
dat = data.frame(NULL)
}
# fix subno name
names(outList[[2]])[1] = "Subject"
# checking for duplicates
# Note that it is right that "digits" has frequent duplicates!
for (i in 1:length(dataSheets)) {
print(names(outList)[i])
print(subset(table(outList[[i]]$Subject), table(outList[[i]]$Subject)>1))
}
debrief = outList[[1]]
debrief[debrief$Subject == 168,] # bad
debrief = debrief[!(debrief$Subject %in% c("165 or 166?", "168")),]
digits = outList[[2]]
digits = digits[complete.cases(digits[,1:9]),]
colnames(digits)
tapply(digits[,2], digits$Subject, mean)
digits[digits$Subject == 1]
digits[digits$Subject == 1, 2]
digits[digits$Subject == 10, 2]
digits[digits$Subject == 60, 2]
mean(c(876.7, 879.7))
x = data.frame(1:4, 5:8)
x
x[,3] = 7
x
dim(digits)
library(xlsx)
dataSheets = c("Debrief", "digits", "Distraction_Assignment", "Note_sheet",
"Post-Questionnaire", "Writing_Task_Evaluation")
outList = vector("list", length=length(dataSheets))
names(outList) = dataSheets
dat = data.frame(NULL)
for (i in 1:length(dataSheets)) {
RAs = substr(list.files(pattern=dataSheets[i]), nchar(dataSheets[i])+2, nchar(dataSheets[i])+3)
for (j in 1:length(RAs)) {
fileName = paste(dataSheets[i], "_", RAs[j], ".xlsx", sep="")
temp = read.xlsx(fileName, 1, stringsAsFactors=F)
temp$Entrant = RAs[j]
print(fileName); print(names(temp))
dat = rbind(dat, temp)
# Save to an object with variable name
# I'm going to use eval(parse()) and you don't get to pretend you're better than me
}
outList[[i]] = dat
dat = data.frame(NULL)
}
# fix subno name
names(outList[[2]])[1] = "Subject"
# checking for duplicates
# Note that it is right that "digits" has frequent duplicates!
for (i in 1:length(dataSheets)) {
print(names(outList)[i])
print(subset(table(outList[[i]]$Subject), table(outList[[i]]$Subject)>1))
}
debrief = outList[[1]]
debrief[debrief$Subject == 168,] # bad
debrief = debrief[!(debrief$Subject %in% c("165 or 166?", "168")),]
digits = outList[[2]]
digits = digits[complete.cases(digits[,1:9]),]
# need to average digit-ratios, inspect for enormous differences
distract = outList[[3]]
distract = distract[!(distract$Subject %in% c(168, 170, 203, 33)),]
distract = distract[complete.cases(distract),]
notes = outList[[4]]
notes[notes$Subject == 150,]
notes = notes[-265,] # deleting duplicate row
postQ = outList[[5]]
eval = outList[[6]]
eval = eval[!(eval$Subject %in% c(140, 63, 82)),]
dat = data.frame(NULL)
names(dat) = c(names(notes), names(distract), names(postQ),
names(distract), names(digits), names(debrief), names(eval))
digitsNew = digits
dim(digitsNew)
colnames(digitsNew)
table(digitsNew$Subject, digitsNew$Entrant)
for (i in 2:9) {
digitsNew[,i] = tapply(digits[,i], digits$Subject, mean) # create averages
digitsNew[,i+10] = tapply(digits[,i], digits$Subject, diff) # create new column for storing diff
}
digitsNew = data.frame(NULL)
digitsNew$Subject = unique(digits$Subject)
digitsNew
digitsNew$Subject = 1
unique(digits$Subject)
?tapply
jul<-read.xlsx(file="digits_JS.xlsx")
jul<-read.xlsx(file="digits_JS.xlsx", 1)
rac<-read.xlsx(file="digits_RP.xlsx", 1)
tay<-read.xlsx(file="digits_TG.xlsx", 1)
mean(colnames(jul) == colnames(rac) == colnames(tay)) #should equal 1
mean(colnames(jul) == colnames(rac) &
colnames(jul) == colnames(tay)) #should equal 1
